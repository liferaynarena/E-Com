<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.mycompany</groupId>
        <artifactId>ecommerce-website</artifactId>
        <version>1.0</version>
    </parent>
    <artifactId>site</artifactId>
    <packaging>war</packaging>
    <name>site</name>
    <description>Web Module For Broadleaf Commerce Based ECommerce Site</description>
    <properties>
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
         <tomcat.dir>D:\E-Commerce\apache-tomcat-7.0.53</tomcat.dir>
        <!-- httpsPort and httpPort are used by embeded jetty server.-->
        <!-- Make sure the following httpsPort matches what's in the runtime-properties file,  -->
        <httpsPort>8443</httpsPort> 
        <httpPort>8080</httpPort>
    </properties>
    <build>
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
        <finalName>mycompany</finalName>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>keytool-maven-plugin</artifactId>
            </plugin>
            
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <configuration>
                    <packaging>war</packaging>
                    <rootPath>${basedir}</rootPath>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Used by embedded Tomcat to move context.xml for JNDI resources -->
            <!-- Configuration inherited from parent -->            
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <!-- Main configuration inherited from parent -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <path>/</path>
                    <port>${httpPort}</port>
                    <httpsPort>${httpsPort}</httpsPort>
                </configuration>
            </plugin>
            
	       <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-war-plugin</artifactId>
	            <version>2.6</version>
	            <configuration>
	              <!-- <warName>${name}</warName>
	               <outputDirectory>D:\E-Commerce\apache-tomcat-7.0.53\webapps</outputDirectory> -->
	               <webappDirectory>D:\E-Commerce\apache-tomcat-7.0.53\webapps\site</webappDirectory>
	            </configuration>
	        </plugin>
	        
			<!-- <plugin>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <version>1.3</version>
			    <executions>
			        <execution>
			            <phase>install</phase>
			            <configuration>
			                <tasks name="Deploy to Tomcat">
			                    stop tomcat
			                    <exec dir="${tomcat.dir}" executable="${tomcat.dir}/bin/shutdown.bat" failonerror="false">
			                        <arg line="" />
			                    </exec>
			                    give Tomcat some time to shut down
			                    <sleep seconds="1"/>
			                    delete the web application folder
			                    <delete dir="${tomcat.dir}\webapps\mycompany" />
			                    copy the new war file to Tomcat and overwrite an existing file
			                    <copy file="D:\E-Commerce\DemoSite-master\site\target\mycompany.war" todir="${tomcat.dir}\webapps" overwrite="true"
			                        failonerror="true" />
			                    start tomcat
			                    <exec dir="${tomcat.dir}" executable="${tomcat.dir}/bin/startup.bat" failonerror="true">
			                        <arg line="" />
			                    </exec>
			                </tasks>
			            </configuration>
			            <goals>
			                <goal>run</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin> -->
			
			
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.mycompany</groupId>
            <artifactId>core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.broadleafcommerce</groupId>
            <artifactId>broadleaf-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.broadleafcommerce</groupId>
            <artifactId>broadleaf-framework-web</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
    </dependencies>
</project>
